import { Component } from '@angular/core';
import * as firebase from 'firebase';
declare var window: any;
import { FileUploader } from 'ng2-file-upload';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'app works!';
  uploadme = {src: ""};
  fileddd: any;
  list = [];
  constructor(){
    const fbConf = {
      
      };

      firebase.initializeApp(fbConf);

    let db = firebase.database().ref("/products/jyothi");


    db.on('value', (snapshot) => {
      this.list.push(snapshot.val())
    });






  }
  uploadImage(){
    this.makeFileIntoBlob(this.fileddd).then(data => {

      var storageRef = firebase.storage().ref();
      const bucket = storageRef.child("somerandomeimage.jpg");

  /*    let blob = "";
      let task = bucket.putString(blob, 'base64', { contentType: 'image/jpeg' });


      task.on('state_changed', (data) => {
        console.log("=-========",data);
      }, (error) => console.log("---error---", error), function():any{

        //db.set({image: task.snapshot.downloadURL});

      })
  */
    })
    console.log("====image=====", this.fileddd);
  }
  makeFileIntoBlob(_imagePath) {
    return new Promise((resolve, reject) => {
      window.resolveLocalFileSystemURL(_imagePath, fileEntry => {
        fileEntry.file(resFile => {
          var reader = new FileReader();
          reader.onloadend = (evt: any) => {
            var imgBlob: any = new Blob([evt.target.result], {
              type: "video/mp4"
            });
            imgBlob.name = "asd-da-df-d-f-ad-d.mp4";
            resolve(imgBlob);
          };

          reader.onerror = e => {
            reject(e);
          };

          reader.readAsArrayBuffer(resFile);
        });
      });
    });
  }

}
